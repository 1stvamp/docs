extends inc/layout
      
block vars
  - var title='Authoring Charms'
  - var page='authors-charm-quality'
      
block content
  article.
      <section id ="authors-charm-quality">
      <h1>Charm Quality Rating</h1>
      <p>People demand quality out of their tools, and the Charm Store is no different. So what does a good charm look like? These are some guidelines on what we think an ideal charm provides users. So we rate charms by the following criteria, and give them a score, up to 39.</p>
      <p class="note"><strong>Note: </strong>This is an ideal list of what we'd like charms to be. No charm today comes close to getting all of these points; it's a target we set for ourselves so we can determine how we can improve individual charms. It also gives contributors a general idea of where they can spend their time to fix something.</p>

      <h2>Reliable</h2>
      <p><strong>9</strong> Possible points</p>

      <ul class="simple">
      <li>Deploy on every provider and pass provider tests<ul>
      <li>+1 AWS</li>
      <li>+1 HP Cloud</li>
      <li>+1 OpenStack</li>
      <li>+1 LXC</li>
      <li>+1 MAAS</li>
      <li>+1 Check for integrity from upstream source</li>
      <li>+1 Fail gracefully if upstream source goes missing</li>
      <li>+1 Contain a suite of tests with the charm that pass</li>
      <li>+1 Passes tests from Jenkins on jujucharms.com</li>
      </ul>
      </li>
      </ul>


      <h2>Secure</h2>
      <p><strong>4</strong> possible points</p>

      <ul class="simple">
      <li>+1 Contain a well tested AppArmor profile</li>
      <li>+1 Conform to security policies of the charm store<ul>
      <li>Tight access control</li>
      </ul>
      </li>
      <li>+1 Doesn't run as root</li>
      <li>+1 Per instance or service access control</li>
      </ul>

      <h2>Flexible</h2>
      <p><strong>2</strong> possible points</p>

      <ul class="simple">
      <li>+1 Contain opinionated tuning options<ul>
      <li>Examples (depends on the service): &quot;safe&quot;, &quot;default&quot;, &quot;fast&quot;, &quot;real fast, not so safe&quot;</li>
      <li>Don't expose every configuration, pick that reflect real world usage</li>
      <li>Make it so I don't have to read the book.</li>
      </ul>
      </li>
      <li>+1 Use existing interfaces with other charms<ul>
      <li>Highly relatable.</li>
      </ul>
      </li>
      </ul>

      <h2>Handle Data</h2>
      <p><strong>3</strong> possible points</p>

      <ul>
      <li>Integrate data storage best practices<ul>
      <li>+1 Backups based on service usage</li>
      </ul>
      </li>
      <li>Handle the service's user data<ul>
      <li>+1 Version control</li>
      <li>+1 Automated snapshots and backup</li>
      </ul>
      </li>
      </ul>

      <h2>Scaleable</h2>
      <p><strong>5</strong> possible points</p>

      <ul>
      <li>+1 Responds to add-unit based on the service's needs<ul>
      <li>Configuration should not require additional steps to scale horizontally</li>
      </ul>
      </li>
      <li>+1 Be tested with a real workload, not just a synthetic benchmark</li>
      <li>Encapsulate scalability best practices<ul>
      <li>+1 From upstream and existing devops for that service</li>
      <li>+1 Community peer reviewed</li>
      <li>+1 Have a configure option for most performant configuration if not the default</li>
      </ul>
      </li>
      </ul>

      <h2>Easy to Deploy</h2>
      <p><strong>7</strong> possible points</p>

      <ul>
      <li>Well documented README with examples of use<ul>
      <li>+1 for a typical workload</li>
      <li>+1 for workloads at scale</li>
      <li>+1 Recommend best-practice relationships</li>
      </ul>
      </li>
      <li>Allow installation of the service from ...<ul>
      <li>+1 Pure upstream source</li>
      <li>+1 Your local source</li>
      <li>+1 PPA (if available)</li>
      <li>+1 The Ubuntu repository</li>
      </ul>
      </li>
      </ul>

      <h2>Responsive to DevOps Needs</h2>
      <p><strong>4</strong> possible points</p>


      <ul>
      <li>+1 Allow for easy upgrade via juju upgrade-charm</li>
      <li>+1 Allow upgrading the service itself.</li>
      <li>Proper maintainership<ul>
      <li>+1 Responsive to user bug reports and concerns</li>
      <li>+1 Maintainable, easy to read and modify</li>
      </ul>
      </li>
      </ul>


      <h2>Upstream Friendly</h2>
      <p><strong>4</strong> possible points</p>


      <ul>
      <li>Follow upstream best practices<ul>
      <li>+1 Provide an option for a barebones &quot;pure upstream&quot; configuration</li>
      </ul>
      </li>
      <li>Should go lock-step with deployment recommendations<ul>
      <li>+1 Provide tip-of-trunk testing if feasible</li>
      </ul>
      </li>
      <li>Be cognizant of their release schedule<ul>
      <li>+1 Fresh charm on release day!</li>
      <li>+1 Endeavour to be upstream's recommended way to deploy that service in the cloud (website mention or something)</li>
      </ul>
      </li>
      </ul>

      </section>
